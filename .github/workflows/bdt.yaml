name: Build, Deploy and Iter8 v2
on:
  workflow_dispatch:

env:
  INGRESS_SUBDOMAIN: 'kalantar-20211029-1-f0f5a1e5d9c5f09a7767f1f253010cba-0000.us-south.containers.appdomain.cloud'

jobs:
  build:
    name: Build and Start Test of Candidate Version
    runs-on: ubuntu-latest
    steps:

    # Build new version as docker image and push to registry
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up docker, determine image tag
    - name: Extract details from event
      run: |
        ownerrepo=${{ github.repository }}
        owner=$(echo $ownerrepo | cut -f1 -d/)
        if [[ "$owner" == "iter8-tools" ]]; then
          owner=iter8
        fi
        echo "OWNER=$owner" >> $GITHUB_ENV
        echo "REPO=$(echo $ownerrepo | cut -f2 -d/)" >> $GITHUB_ENV

    - run: echo "IMAGE=${{ env.OWNER }}/${{ env.REPO }}:${{ github.sha }}" >> $GITHUB_ENV
    - run: echo "NAMESPACE=test-${{ github.sha }}" >> $GITHUB_ENV

    # Build and push image (to DockerHub)
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SECRET }}
    - name: Build and push image
      uses: docker/build-push-action@v2
      with:
        tags: ${{ env.IMAGE }}
        push: true
        


    - name: Create target namespace
      run: |
        kubectl create ns ${{ env.NAMESPACE }} || true

    - name: Deploy on IKS
      uses: kalantar/myserver/.github/workflows/deploy-iks-reusable.yaml@main
      with:
        image: ${{ env.IMAGE }}
        namespace: ${{ env.NAMESPACE }}

    - name: Wait for app to Start
      run: kubectl -n ${{ env.NAMESPACE }} wait --for=condition=available --timeout=60s --all deployments 
    - name: Determine port
      run: |
        port=$(kubectl -n ${{ env.NAMESPACE }} get svc myservice -o jsonpath='{.spec.ports[0].nodePort}')
        echo "PORT=$port" >> $GITHUB_ENV




    - name: Run Iter8 Experiment (in default namespace of cluster)
      run: |
        iter8 gen exp \
          --set ref=${{ github.sha }} \
          --set url="http://$INGRESS_SUBDOMAIN:$PORT" \
          --set image="${{ env.IMAGE }}" \
          --set namespace="${{ env.NAMESPACE }}" \
          --set user='$USER' \
          --set token='$TOKEN'
        cat experiment.yaml
        iter8 gen k8s --set loglevel=trace | kubectl apply -f -
