name: Build and Experiment

on:
  push:
    branches: [ main ]

jobs:
  build-and-experiment:
    name: Build and Experiment
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SECRET }}

    - name: Get owner and repo
      run: |
        ownerrepo=${{ github.repository }}
        owner=$(echo $ownerrepo | cut -f1 -d/)
        if [[ "$owner" == "iter8-tools" ]]; then
          owner=iter8
        fi
        echo "OWNER=$owner" >> $GITHUB_ENV
        echo "REPO=$(echo $ownerrepo | cut -f2 -d/)" >> $GITHUB_ENV

    - name: build and push server image
      uses: docker/build-push-action@v2
      with:
        context: .
        tags: ${{ env.OWNER }}/${{ env.REPO }}:${{ github.event.commits[0].id }}
        file: Dockerfile
        push: true

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - run: go version
  
    - name: Install kind cluster
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: "v0.11.1"

    - name: Install Iter8 CLI
      run: | 
        GOBIN=/usr/local/bin go install github.com/iter8-tools/iter8/k8s@30d8d1b
        mv /usr/local/bin/k8s /usr/local/bin/iter8
      
    - run: iter8 -h

    - name: generate random namespace name
      run: |
        "NS=test-$(od -An -N1 -i /dev/random)" >> $GITHUB_ENV
    
    - run: echo $NS

    - name: deploy new version
      run: |
        port=$(echo "$(od -An -N1 -i /dev/random) + 32000" | bc)
        kubectl create ns $NS
        kubectl -n $NS apply -f deployment.yaml
        kubectl port-forward deploy/myservice 8080:$port

    - run: iter8 run
    - run: iter8 assert -c completed,nofailure,slos
    - run: iter8 report

    - name: cleanup
      run: kubectl delete ns $NS