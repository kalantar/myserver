name: Build and Experiment

on:
  push:
    branches: [ main ]

jobs:
  build:
    steps:
    # Check out code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up docker, determine image tag
    - name: Get owner and repo
      run: |
        ownerrepo=${{ github.repository }}
        owner=$(echo $ownerrepo | cut -f1 -d/)
        if [[ "$owner" == "iter8-tools" ]]; then
          owner=iter8
        fi
        echo "OWNER=$owner" >> $GITHUB_ENV
        echo "REPO=$(echo $ownerrepo | cut -f2 -d/)" >> $GITHUB_ENV
    - run: echo "IMAGE=${{ env.OWNER }}/${{ env.REPO }}:${{ github.event.commits[0].id }}" >> $GITHUB_ENV

    # Build and push image (to DockerHub)
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SECRET }}
    - name: Build and push image
      uses: docker/build-push-action@v2
      with:
        tags: ${{ env.OWNER }}/${{ env.REPO }}:${{ github.event.commits[0].id }}
        push: true

  deploy:
    needs: build
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
  
    - name: Install kind cluster
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: "v0.11.1"

    - name: generate random namespace name
      run: |
        rdm=$(od -An -N1 -i /dev/random | tr -d '[:space:]')
        echo "NS=test-$rdm" >> $GITHUB_ENV
    
    - run: echo $NS

    - name: deploy new version
      run: |
        port=$(echo "$(od -An -N1 -i /dev/random) + 32000" | bc)
        kubectl create ns $NS
        sed "s#IMAGE#$IMAGE#" deployment.yaml | kubectl -n $NS apply -f -
        kubectl -n $NS port-forward deploy/myserver $port:8080 &

  experiment:
    needs: deploy
    steps:
    - name: Install Iter8 CLI
      run: | 
        GOBIN=/usr/local/bin go install github.com/iter8-tools/iter8/k8s@30d8d1b
        mv /usr/local/bin/k8s /usr/local/bin/iter8
    - run: iter8 -h
    - run: LOG_LEVEL=trace iter8 run
    - run: iter8 assert -c completed,nofailure,slos
    - run: iter8 report



  build-and-experiment:
    name: Build and Experiment
    runs-on: ubuntu-latest
    steps:




    - name: cleanup
      run: kubectl delete ns $NS